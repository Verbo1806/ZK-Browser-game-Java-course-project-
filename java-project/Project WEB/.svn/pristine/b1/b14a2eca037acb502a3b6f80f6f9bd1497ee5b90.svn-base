package bg.infosys.daeu.web.vm.nomenclatures;

import java.util.Map;
import java.util.AbstractMap.SimpleEntry;

import org.zkoss.bind.annotation.AfterCompose;
import org.zkoss.bind.annotation.Command;
import org.zkoss.bind.annotation.ContextParam;
import org.zkoss.bind.annotation.ContextType;
import org.zkoss.bind.annotation.Init;
import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.Executions;
import org.zkoss.zk.ui.select.Selectors;
import org.zkoss.zk.ui.select.annotation.VariableResolver;
import org.zkoss.zk.ui.select.annotation.Wire;
import org.zkoss.zk.ui.select.annotation.WireVariable;
import org.zkoss.zkplus.spring.DelegatingVariableResolver;
import org.zkoss.zul.Window;

import bg.infosys.common.web.interfaces.Refreshable;
import bg.infosys.daeu.db.entity.pub.CPVCode;
import bg.infosys.daeu.web.service.NomenclaturesService;

@VariableResolver(DelegatingVariableResolver.class)
public class AddEditCPVCode {
	@WireVariable
	private NomenclaturesService nomenclaturesService;
	
	@Wire
	private Window addEditCPVCodeDlg;
	
	private Refreshable<SimpleEntry<CPVCode, CPVCode>> parent;
	private CPVCode cpvCode = new CPVCode();
	private CPVCode parentCode;
	
	@SuppressWarnings("unchecked")
	@Init
	public void init() {
		Map<String, Object> args = (Map<String, Object>) Executions.getCurrent().getArg();
		
		parent = (Refreshable<SimpleEntry<CPVCode, CPVCode>>) args.get(Refreshable.PARENT_VM);
		parentCode = (CPVCode) args.get("PRC");
	}
	
	@AfterCompose
	public void afterCompose(@ContextParam(ContextType.VIEW) Component view) {
		Selectors.wireComponents(view, this, false);
	}
	
	@Command
	public void save() {
		cpvCode.setValid("Y");
		cpvCode.setParent(parentCode);
		nomenclaturesService.saveCPVCode(cpvCode);
		
		parent.refresh(new SimpleEntry<CPVCode, CPVCode>(parentCode, cpvCode));
		
		addEditCPVCodeDlg.detach();
	}
	
	@Command
	public void cancel() {
		addEditCPVCodeDlg.detach();
	}

	public CPVCode getCpvCode() {
		return cpvCode;
	}

	public void setCpvCode(CPVCode cpvCode) {
		this.cpvCode = cpvCode;
	}
}
