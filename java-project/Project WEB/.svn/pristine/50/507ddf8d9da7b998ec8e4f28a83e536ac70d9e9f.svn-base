package bg.infosys.daeu.web.vm.nomenclatures;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.zkoss.bind.BindUtils;
import org.zkoss.bind.annotation.AfterCompose;
import org.zkoss.bind.annotation.Command;
import org.zkoss.bind.annotation.ContextParam;
import org.zkoss.bind.annotation.ContextType;
import org.zkoss.bind.annotation.Init;
import org.zkoss.zk.ui.Component;
import org.zkoss.zk.ui.Executions;
import org.zkoss.zk.ui.select.Selectors;
import org.zkoss.zk.ui.select.annotation.VariableResolver;
import org.zkoss.zk.ui.select.annotation.WireVariable;
import org.zkoss.zkplus.spring.DelegatingVariableResolver;
import org.zkoss.zul.Window;

import bg.infosys.common.web.interfaces.Refreshable;
import bg.infosys.common.web.utils.ZulLocator;
import bg.infosys.daeu.db.entity.pub.EBKCode;
import bg.infosys.daeu.web.service.NomenclaturesService;

@VariableResolver(DelegatingVariableResolver.class)
public class EBKCodesVM implements Refreshable<EBKCode> {
	@WireVariable
	private NomenclaturesService nomenclaturesService;
	
	private List<EBKCode> ebkCodes;
	
	@Init
	public void init() {
		ebkCodes = nomenclaturesService.findAllEBKCodes();
	}
	
	@AfterCompose
	public void afterCompose(@ContextParam(ContextType.VIEW) Component view) {
		Selectors.wireComponents(view, this, false);
	}
	
	@Command
	public void add() {
		Map<String, Object> params = new HashMap<>();
		params.put(PARENT_VM, this);
		
		Window window = (Window) Executions.createComponents(ZulLocator.zulLocationByName("addEditEBKCode.zul"), null, params);
		window.doModal();
	}

	public List<EBKCode> getEbkCodes() {
		return ebkCodes;
	}

	public void setEbkCodes(List<EBKCode> ebkCodes) {
		this.ebkCodes = ebkCodes;
	}

	@Override
	public void refresh(EBKCode value) {
		ebkCodes.add(value);
		BindUtils.postNotifyChange(null, null, this, "ebkCodes");
	}
}
