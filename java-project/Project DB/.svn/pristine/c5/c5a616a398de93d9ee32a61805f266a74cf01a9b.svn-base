package bg.infosys.daeu.db.entity.tech_specs;

import java.util.ArrayList;
import java.util.Date;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;

import bg.infosys.daeu.db.entity.pub.Checklist;
import bg.infosys.daeu.db.entity.pub.Letter;

@Entity
@Table(schema = "tech_specs" ,name = "tech_specs_versions")
public class TechSpecsVersion {
	@Id
	@SequenceGenerator(name = "tech_specs_versions_seq", sequenceName = "tech_specs.tech_specs_versions_id_seq", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "tech_specs_versions_seq")
	private Integer id;
	
	@OneToOne
	@NotNull
	@JoinColumn(name = "tech_spec_id")
	private TechSpecs techSpecs;
	public static final String _techSpecs = "techSpecs";
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "letter_id")
	private Letter letter;
	public static final String _letter = "letter";
	
	@Column(name = "date_created", columnDefinition = "TIMESTAMP")
	private Date dateCreated;
	public static final String _dateCreated = "dateCreated";
	
	@Column(name = "last_update", columnDefinition = "TIMESTAMP")
	private Date lastUpdate;
	public static final String _lastUpdate = "lastUpdate";
	
	@Column(name = "outgoing_num")
	private String outgoingNum;
	public static final String _outgoingNum = "outgoingNum";
	
	@Column(name = "outgoing_date", columnDefinition = "TIMESTAMP")
	private Date outgoingDate;
	public static final String _outgoingDate = "outgoingDate";
	
	@Column(name = "incoming_num")
	private String incomingNum;
	public static final String _incomingNum = "incomingNum";
	
	@Column(name = "incoming_date", columnDefinition = "TIMESTAMP")
	private Date incomingDate;
	public static final String _incomingDate = "incomingDate";
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "checklist_id")
	private Checklist checklist;
	public static final String _checklist = "checklist";
	
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "techSpecsVersion")
	private Set<TechSpecsVersionValue> values;
	public static final String _values = "values";
	
	@OneToMany(cascade = CascadeType.ALL, mappedBy = "techSpecsVersion")
	private List<TechSpecsAttachedDoc> attachedDocs;
	public static final String _attachedDocs = "attachedDocs";
	
	public TechSpecsVersion() {
		this.attachedDocs = new ArrayList<TechSpecsAttachedDoc>();
		this.values = new LinkedHashSet<TechSpecsVersionValue>();
	}

	public Integer getId() {
		return id;
	}
	
	public void setId(Integer id) {
		this.id = id;
	}
	
	public TechSpecs getTechSpecs() {
		return techSpecs;
	}
	
	public void setTechSpecs(TechSpecs techSpecs) {
		this.techSpecs = techSpecs;
	}
	
	public Letter getLetter() {
		return letter;
	}
	
	public void setLetter(Letter letter) {
		this.letter = letter;
	}
	
	public Date getDateCreated() {
		return dateCreated;
	}
	
	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}
	
	public Date getLastUpdate() {
		return lastUpdate;
	}
	
	public void setLastUpdate(Date lastUpdate) {
		this.lastUpdate = lastUpdate;
	}
	
	public String getOutgoingNum() {
		return outgoingNum;
	}
	
	public void setOutgoingNum(String outgoingNum) {
		this.outgoingNum = outgoingNum;
	}
	
	public Date getOutgoingDate() {
		return outgoingDate;
	}
	
	public void setOutgoingDate(Date outgoingDate) {
		this.outgoingDate = outgoingDate;
	}
	
	public String getIncomingNum() {
		return incomingNum;
	}
	
	public void setIncomingNum(String incomingNum) {
		this.incomingNum = incomingNum;
	}
	
	public Date getIncomingDate() {
		return incomingDate;
	}
	
	public void setIncomingDate(Date incomingDate) {
		this.incomingDate = incomingDate;
	}
	
	public Checklist getChecklist() {
		return checklist;
	}
	
	public void setChecklist(Checklist checklist) {
		this.checklist = checklist;
	}


	public Set<TechSpecsVersionValue> getValues() {
		return values;
	}

	public void setValues(Set<TechSpecsVersionValue> values) {
		this.values = values;
	}

	public List<TechSpecsAttachedDoc> getAttachedDocs() {
		return attachedDocs;
	}

	public void setAttachedDocs(List<TechSpecsAttachedDoc> attachedDocs) {
		this.attachedDocs = attachedDocs;
	}
}
